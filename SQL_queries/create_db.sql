CREATE DATABASE IF NOT EXISTS GAME_DB;
USE GAME_DB;

CREATE TABLE IF NOT EXISTS USERS_LOGIN (
    USERNAME VARCHAR(255) PRIMARY KEY,
    USER_PASSWORD VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS USER_DETAILS (
    USERNAME VARCHAR(255) PRIMARY KEY,
    PHONE CHAR(10) NOT NULL,
    EMAIL VARCHAR(255) NOT NULL,
    FOREIGN KEY (USERNAME) REFERENCES USERS_LOGIN(USERNAME) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS SNAKE_GAME (
    SNAKE_GAME_ID INT AUTO_INCREMENT PRIMARY KEY,
    USERNAME VARCHAR(255),
    SCORE INT NOT NULL,
    FOREIGN KEY (USERNAME) REFERENCES USERS_LOGIN(USERNAME) ON DELETE CASCADE
);
    
CREATE TABLE IF NOT EXISTS GAMBLE_GAME_POINTS (
    USERNAME VARCHAR(255) PRIMARY KEY,
    SCORE INT NOT NULL,
    FOREIGN KEY (USERNAME) REFERENCES USERS_LOGIN(USERNAME) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS GAMBLE_GAME_GAMBLES (
    GAMBLE_GAME_ID INT AUTO_INCREMENT PRIMARY KEY,
    USER1 VARCHAR(255) NOT NULL,
    USER2 VARCHAR(255) NOT NULL,
    SCORE1 INT NOT NULL,
    SCORE2 INT NOT NULL,
    -- SIGNED INT GAMBLE
    GAMBLE INT NOT NULL,
    FOREIGN KEY (USER1) REFERENCES USERS_LOGIN(USERNAME) ON DELETE CASCADE,
    FOREIGN KEY (USER2) REFERENCES USERS_LOGIN(USERNAME) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS SPACE_INVADERS_GAME (
    SPACE_INVADERS_GAME_ID INT AUTO_INCREMENT PRIMARY KEY,
    USERNAME VARCHAR(255),
    SCORE INT NOT NULL,
    FOREIGN KEY (USERNAME) REFERENCES USERS_LOGIN(USERNAME) ON DELETE CASCADE
);

-- DROP DATABASE IF EXISTS GAME_DB;

SELECT * FROM USERS_LOGIN;
SELECT * FROM USER_DETAILS;
SELECT * FROM SNAKE_GAME;
SELECT * FROM GAMBLE_GAME_POINTS;
SELECT * FROM GAMBLE_GAME_GAMBLES;
SELECT * FROM SPACE_INVADERS_GAME;

-- Select all scores for gamble game using union and case
SELECT USER1, USER2, GAMBLE FROM GAMBLE_GAME_GAMBLES WHERE USER1 = '{current_user}'
UNION
SELECT USER2, USER1, -GAMBLE AS GAMBLE FROM GAMBLE_GAME_GAMBLES WHERE USER2 = '{current_user}';